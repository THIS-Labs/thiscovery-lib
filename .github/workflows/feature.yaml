name: Feature pipeline

on:
  push:
    branches:
      - 'cicd-*'
  pull_request:
    branches:
      - 'master'


env:
  PIPELINE_USER_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  PIPELINE_USER_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  EPSAGON_TOKEN: ${{ secrets.EPSAGON_TOKEN }}
  SAM_TEMPLATE: template.yaml
  AWS_REGION: eu-west-1
  STACK_NAME: thiscovery-crm


jobs:

  test:
    name: Test on AWS
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install Python 3
        uses: actions/setup-python@v4
        with:
          python-version: 3.8

      - name: Configure testing environment
        uses: THIS-Labs/actions-configure-test-env@v0.15
        with:
          afs25_account: ${{ secrets.AFS25_AWS_ACCOUNT }}
          sem86_account: ${{ secrets.SEM86_AWS_ACCOUNT }}
          amp205_account: ${{ secrets.AMP205_AWS_ACCOUNT }}

      - name: Assume the testing role in testing account
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-access-key-id: ${{ env.PIPELINE_USER_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.PIPELINE_USER_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: ${{ env.TESTING_ACCOUNT_TEST_ROLE }}
          role-session-name: ${{ env.STACK_NAME }}-testing
          role-duration-seconds: 3600
          role-skip-session-tagging: true

      - name: Run tests
        uses: THIS-Labs/actions-run-tests@v0.1


#name: Python application
#
#on:
#  push:
#    branches: [ "master" ]
#  pull_request:
#    branches: [ "master" ]
#
#permissions:
#  contents: read
#
#jobs:
#  build:
#
#    runs-on: ubuntu-latest
#
#    steps:
#    - uses: actions/checkout@v3
#    - name: Set up Python 3.10
#      uses: actions/setup-python@v3
#      with:
#        python-version: "3.10"
#    - name: Install dependencies
#      run: |
#        python -m pip install --upgrade pip
#        pip install flake8 pytest
#        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
#    - name: Lint with flake8
#      run: |
#        # stop the build if there are Python syntax errors or undefined names
#        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
#        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
#        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
#    - name: Test with pytest
#      run: |
#        pytest